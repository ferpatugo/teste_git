#--- estudo das imfs

##Função que soma as IMFs dada IMF inicial e final
fc_somaIMF <- function(ceemd.result, inicio, fim){
  soma_imf <- rep(0, length(ceemd.result[["original.signal"]]))
  for (k in inicio:fim){
    soma_imf <- soma_imf + ceemd.result[["imf"]][,k]
  }
  return(soma_imf)
}

#cria as IMFs acumuladas
cum.vec <- list()
for (i in 1:ceemd.result[["nimf"]]){
  cum.vec[[i]] <- fc_somaIMF(ceemd.result, 1, i)
}


# criando vetor das imfs
vec <- list()
for (n in 1:ceemd.result$nimf){
  vec[[n]] <- ceemd.result[["imf"]][,n]
}

par(mfrow=c(3,4))

metricas_dist_imfs <- function(dados) {
  # Cálculo das métricas
  #dados = ( dados - min(dados) )/ (max(dados) - min(dados))
  dados = ( dados - mean(dados) )/ sd(dados) 
  assimetria <- skewness(dados)
  curtose <- kurtosis(dados)
  rugosidade <- mean((diff(dados) ** 2) / 4)
  
  # Visualização dos dados
  plot(dados)
  hist(dados)
  
  # Armazenamento das métricas em um dataframe
  metricas <- data.frame(
    Assimetria = assimetria,
    Curtose = curtose,
    Rugosidade = rugosidade
  )
  
  
  # Retorno do dataframe com as métricas
  return(assign("metricas",metricas,envir = .GlobalEnv))
}

# métricas da distribuição das imfs
metricas_lista2 = sapply(vec,metricas_dist_imfs)

df_metricas_lista2 = data.frame(t(metricas_lista2))

# imfs acumuladas e métricas não acumuladas
for (m in 1:length(names(df_metricas_lista2)) ) {
  
  hist(as.numeric(df_metricas_lista2[m][1][[1]] ))
  
}  

# imfs acumuladas e métricas acumuladas
for (m in 1:length(names(df_metricas_lista2)) ) {
  
  hist(cumsum(as.numeric(df_metricas_lista2[m][1][[1]] )) )
  
}  

# métricas da distribuição acumulada das imfs não acumuladas

metricas_lista1 = sapply(cum.vec,metricas_dist_imfs)

df_metricas_lista1 = data.frame(t(metricas_lista1))

par(mfrow=c(3,4))

# sem estar ordenado, imfs sem acumular e sem acumular métricas

for (m in 1:length(names(df_metricas_lista1)) ) {
  
  hist(as.numeric(df_metricas_lista1[m][1][[1]] ))
  plot(as.numeric(df_metricas_lista1[m][1][[1]] ))
  
}  

# sem estar ordenado, imfs acumuladas e sem acumular métricas

for (m in 1:length(names(df_metricas_lista2)) ) {
  
  hist(as.numeric(df_metricas_lista2[m][1][[1]] )) 
  plot(as.numeric(df_metricas_lista2[m][1][[1]] ))
}  


# ordenado, imfs não acumuladas e sem acumular métricas

for (m in 1:length(names(df_metricas_lista1)) ) {
  
  hist(sort(as.numeric(df_metricas_lista1[m][1][[1]] )) )
  plot(sort(as.numeric(df_metricas_lista1[m][1][[1]] )) )
  
}  

# ordenado, imfs acumuladas e acumulando métricas

for (m in 1:length(names(df_metricas_lista2)) ) {
  
  hist(sort(cumsum(as.numeric(df_metricas_lista2[m][1][[1]] )) ))
  plot(sort(cumsum(as.numeric(df_metricas_lista2[m][1][[1]] ))) )
}  


